[33mcommit db95913e82dfc636583b1cde872dc8cfbf02a2e0[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mname-similarity-function-matching[m[33m)[m
Author: shawbyoung <shawbyoung@gmail.com>
Date:   Mon Jun 17 22:47:18 2024 -0700

    [BOLT] Name similarity function matching
    
    Matching functions based on edit
    distance.
    
    Test Plan:
    added
    name-similarity-function-matching.test.
    
    Reviewers:
    Subscribers:
    
    Tasks:
    
    Tags:
    
    Differential Revision: https://phabricator.intern.facebook.com/D58980350
    
    Pull Request: https://github.com/llvm/llvm-project/pull/95884

[1mdiff --git a/bolt/docs/CommandLineArgumentReference.md b/bolt/docs/CommandLineArgumentReference.md[m
[1mindex 8887d1f5d5bd..5270a55d5461 100644[m
[1m--- a/bolt/docs/CommandLineArgumentReference.md[m
[1m+++ b/bolt/docs/CommandLineArgumentReference.md[m
[36m@@ -630,6 +630,10 @@[m
 [m
   Use a modified clustering algorithm geared towards minimizing branches[m
 [m
[32m+[m[32m- `--name-similarity-function-matching-threshold=<uint>`[m
[32m+[m
[32m+[m[32m  Matches functions using name space and edit distance.[m
[32m+[m
 - `--no-inline`[m
 [m
   Disable all inlining (overrides other inlining options)[m
[36m@@ -710,7 +714,7 @@[m
   - `none`: do not reorder functions[m
   - `exec-count`: order by execution count[m
   - `hfsort`: use hfsort algorithm[m
[31m-  - `hfsort+`: use hfsort+ algorithm[m
[32m+[m[32m  - `hfsort+`: use cache-directed sort[m
   - `cdsort`: use cache-directed sort[m
   - `pettis-hansen`: use Pettis-Hansen algorithm[m
   - `random`: reorder functions randomly[m
[36m@@ -848,6 +852,10 @@[m
 [m
   Only apply branch boundary alignment in hot code[m
 [m
[32m+[m[32m- `--x86-strip-redundant-address-size`[m
[32m+[m
[32m+[m[32m  Remove redundant Address-Size override prefix[m
[32m+[m
 ### BOLT options in relocation mode:[m
 [m
 - `--align-macro-fusion=<value>`[m
[36m@@ -1034,6 +1042,10 @@[m
 [m
   Print clusters[m
 [m
[32m+[m[32m- `--print-estimate-edge-counts`[m
[32m+[m
[32m+[m[32m  Print function after edge counts are set for no-LBR profile[m
[32m+[m
 - `--print-finalized`[m
 [m
   Print function after CFG is finalized[m
[36m@@ -1066,6 +1078,10 @@[m
 [m
   Print functions after inlining optimization[m
 [m
[32m+[m[32m- `--print-large-functions`[m
[32m+[m
[32m+[m[32m  Print functions that could not be overwritten due to excessive size[m
[32m+[m
 - `--print-longjmp`[m
 [m
   Print functions after longjmp pass[m
[1mdiff --git a/bolt/lib/Profile/YAMLProfileReader.cpp b/bolt/lib/Profile/YAMLProfileReader.cpp[m
[1mindex f25f59201f1c..09d36f3ebd84 100644[m
[1m--- a/bolt/lib/Profile/YAMLProfileReader.cpp[m
[1m+++ b/bolt/lib/Profile/YAMLProfileReader.cpp[m
[36m@@ -11,8 +11,11 @@[m
 #include "bolt/Core/BinaryFunction.h"[m
 #include "bolt/Passes/MCF.h"[m
 #include "bolt/Profile/ProfileYAMLMapping.h"[m
[32m+[m[32m#include "bolt/Utils/NameResolver.h"[m
 #include "bolt/Utils/Utils.h"[m
 #include "llvm/ADT/STLExtras.h"[m
[32m+[m[32m#include "llvm/ADT/edit_distance.h"[m
[32m+[m[32m#include "llvm/Demangle/Demangle.h"[m
 #include "llvm/Support/CommandLine.h"[m
 [m
 using namespace llvm;[m
[36m@@ -23,6 +26,11 @@[m [mextern cl::opt<unsigned> Verbosity;[m
 extern cl::OptionCategory BoltOptCategory;[m
 extern cl::opt<bool> InferStaleProfile;[m
 [m
[32m+[m[32mcl::opt<unsigned> NameSimilarityFunctionMatchingThreshold([m
[32m+[m[32m    "name-similarity-function-matching-threshold",[m
[32m+[m[32m    cl::desc("Matches functions using name space and edit distance."),[m
[32m+[m[32m    cl::init(0), cl::Hidden, cl::cat(BoltOptCategory));[m
[32m+[m
 static llvm::cl::opt<bool>[m
     IgnoreHash("profile-ignore-hash",[m
                cl::desc("ignore hash while reading function profile"),[m
[36m@@ -415,11 +423,87 @@[m [mError YAMLProfileReader::readProfile(BinaryContext &BC) {[m
     if (!YamlBF.Used && BF && !ProfiledFunctions.count(BF))[m
       matchProfileToFunction(YamlBF, *BF);[m
 [m
[32m+[m[32m  // Uses name similarity to match functions that were not matched by name.[m
[32m+[m[32m  uint64_t MatchedWithNameSimilarity = 0;[m
[32m+[m
[32m+[m[32m  if (opts::NameSimilarityFunctionMatchingThreshold > 0) {[m
[32m+[m[32m    ItaniumPartialDemangler ItaniumPartialDemangler;[m
[32m+[m
[32m+[m[32m    auto DemangleName = [&](std::string &FunctionName) {[m
[32m+[m[32m      StringRef RestoredName = NameResolver::restore(FunctionName);[m
[32m+[m[32m      return demangle(RestoredName);[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    auto DeriveNameSpace = [&](std::string &DemangledName) {[m
[32m+[m[32m      if (ItaniumPartialDemangler.partialDemangle(DemangledName.c_str()))[m
[32m+[m[32m        return std::string("");[m
[32m+[m[32m      std::vector<char> Buffer(DemangledName.begin(), DemangledName.end());[m
[32m+[m[32m      size_t BufferSize = Buffer.size();[m
[32m+[m[32m      char *NameSpace = ItaniumPartialDemangler.getFunctionDeclContextName([m
[32m+[m[32m          &Buffer[0], &BufferSize);[m
[32m+[m[32m      return NameSpace ? std::string(NameSpace) : std::string("");[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    std::unordered_map<std::string, std::vector<BinaryFunction *>>[m
[32m+[m[32m        NamespaceToBFs;[m
[32m+[m
[32m+[m[32m    NamespaceToBFs.reserve(BC.getBinaryFunctions().size());[m
[32m+[m
[32m+[m[32m    for (BinaryFunction *BF : BC.getAllBinaryFunctions()) {[m
[32m+[m[32m      std::string DemangledName = BF->getDemangledName();[m
[32m+[m[32m      std::string Namespace = DeriveNameSpace(DemangledName);[m
[32m+[m[32m      auto It = NamespaceToBFs.find(Namespace);[m
[32m+[m[32m      if (It == NamespaceToBFs.end())[m
[32m+[m[32m        NamespaceToBFs[Namespace] = {BF};[m
[32m+[m[32m      else[m
[32m+[m[32m        It->second.push_back(BF);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    for (auto YamlBF : YamlBP.Functions) {[m
[32m+[m[32m      if (YamlBF.Used)[m
[32m+[m[32m        continue;[m
[32m+[m[32m      std::string YamlBFDemangledName = DemangleName(YamlBF.Name);[m
[32m+[m[32m      std::string YamlBFNamespace = DeriveNameSpace(YamlBFDemangledName);[m
[32m+[m[32m      auto It = NamespaceToBFs.find(YamlBFNamespace);[m
[32m+[m[32m      if (It == NamespaceToBFs.end())[m
[32m+[m[32m        continue;[m
[32m+[m[32m      std::vector<BinaryFunction *> BFs = It->second;[m
[32m+[m
[32m+[m[32m      unsigned MinEditDistance = UINT_MAX;[m
[32m+[m[32m      BinaryFunction *ClosestNameBF = nullptr;[m
[32m+[m
[32m+[m[32m      for (BinaryFunction *BF : BFs) {[m
[32m+[m[32m        if (ProfiledFunctions.count(BF))[m
[32m+[m[32m          continue;[m
[32m+[m[32m        if (BF->size() != YamlBF.NumBasicBlocks)[m
[32m+[m[32m          continue;[m
[32m+[m[32m        std::string BFDemangledName = BF->getDemangledName();[m
[32m+[m[32m        unsigned BFEditDistance =[m
[32m+[m[32m            StringRef(BFDemangledName).edit_distance(YamlBFDemangledName);[m
[32m+[m[32m        if (BFEditDistance < MinEditDistance) {[m
[32m+[m[32m          MinEditDistance = BFEditDistance;[m
[32m+[m[32m          ClosestNameBF = BF;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (ClosestNameBF &&[m
[32m+[m[32m          MinEditDistance <= opts::NameSimilarityFunctionMatchingThreshold) {[m
[32m+[m[32m        matchProfileToFunction(YamlBF, *ClosestNameBF);[m
[32m+[m[32m        ++MatchedWithNameSimilarity;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
   for (yaml::bolt::BinaryFunctionProfile &YamlBF : YamlBP.Functions)[m
     if (!YamlBF.Used && opts::Verbosity >= 1)[m
       errs() << "BOLT-WARNING: profile ignored for function " << YamlBF.Name[m
              << '\n';[m
 [m
[32m+[m[32m  if (opts::Verbosity >= 2) {[m
[32m+[m[32m    outs() << "BOLT-INFO: matched " << MatchedWithNameSimilarity[m
[32m+[m[32m           << " functions with similar names\n";[m
[32m+[m[32m  }[m
[32m+[m
   // Set for parseFunctionProfile().[m
   NormalizeByInsnCount = usesEvent("cycles") || usesEvent("instructions");[m
   NormalizeByCalls = usesEvent("branches");[m
[1mdiff --git a/bolt/test/X86/name-similarity-function-matching.test b/bolt/test/X86/name-similarity-function-matching.test[m
[1mnew file mode 100644[m
[1mindex 000000000000..1480a2165c38[m
[1m--- /dev/null[m
[1m+++ b/bolt/test/X86/name-similarity-function-matching.test[m
[36m@@ -0,0 +1,64 @@[m
[32m+[m[32m## Tests function matching in YAMLProfileReader by name similarity.[m
[32m+[m
[32m+[m[32m# REQUIRES: system-linux[m
[32m+[m[32m# RUN: split-file %s %t[m
[32m+[m[32m# RUN: llvm-mc -filetype=obj -triple x86_64-unknown-unknown %t/main.s -o %t.o[m
[32m+[m[32m# RUN: %clang %cflags %t.o -o %t.exe -Wl,-q -nostdlib[m
[32m+[m[32m# RUN: llvm-bolt %t.exe -o %t.out --data %t/yaml -v=2 \[m
[32m+[m[32m# RUN:   --print-cfg --name-similarity-function-matching-threshold=1 2>&1 --funcs=main --profile-ignore-hash=0 | FileCheck %s[m
[32m+[m
[32m+[m[32m# CHECK: BOLT-INFO: matched 1 functions with similar names[m
[32m+[m
[32m+[m[32m#--- main.s[m
[32m+[m[32m.globl main[m
[32m+[m[32m.type	main, @function[m
[32m+[m[32mmain:[m
[32m+[m[32m  .cfi_startproc[m
[32m+[m[32m.LBB00:[m
[32m+[m[32m  pushq   %rbp[m
[32m+[m[32m  movq    %rsp, %rbp[m
[32m+[m[32m  subq    $16, %rsp[m
[32m+[m[32m  testq   %rax, %rax[m
[32m+[m[32m  js      .LBB03[m
[32m+[m[32m.LBB01:[m
[32m+[m[32m  jne     .LBB04[m
[32m+[m[32m.LBB02:[m
[32m+[m[32m  nop[m
[32m+[m[32m.LBB03:[m
[32m+[m[32m  xorl    %eax, %eax[m
[32m+[m[32m  addq    $16, %rsp[m
[32m+[m[32m  popq    %rbp[m
[32m+[m[32m  retq[m
[32m+[m[32m.LBB04:[m
[32m+[m[32m  xorl    %eax, %eax[m
[32m+[m[32m  addq    $16, %rsp[m
[32m+[m[32m  popq    %rbp[m
[32m+[m[32m  retq[m
[32m+[m[32m## For relocations against .text[m
[32m+[m[32m.LBB05:[m
[32m+[m[32m  call exit[m
[32m+[m[32m  .cfi_endproc[m
[32m+[m[32m  .size	main, .-main[m
[32m+[m
[32m+[m[32m#--- yaml[m
[32m+[m[32m---[m
[32m+[m[32mheader:[m
[32m+[m[32m  profile-version: 1[m
[32m+[m[32m  binary-name:     'hashing-based-function-matching.s.tmp.exe'[m
[32m+[m[32m  binary-build-id: '<unknown>'[m
[32m+[m[32m  profile-flags:   [ lbr ][m
[32m+[m[32m  profile-origin:  branch profile reader[m
[32m+[m[32m  profile-events:  ''[m
[32m+[m[32m  dfs-order:       false[m
[32m+[m[32m  hash-func:       xxh3[m
[32m+[m[32mfunctions:[m
[32m+[m[32m  - name:            main2[m
[32m+[m[32m    fid:             0[m
[32m+[m[32m    hash:            0x0000000000000001[m
[32m+[m[32m    exec:            1[m
[32m+[m[32m    nblocks:         6[m
[32m+[m[32m    blocks:[m
[32m+[m[32m      - bid:             1[m
[32m+[m[32m        insns:           1[m
[32m+[m[32m        succ:            [ { bid: 3, cnt: 1} ][m
[32m+[m[32m...[m
